(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{281:function(t,v,_){"use strict";_.r(v);var a=_(14),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),v("blockquote",[v("p",[t._v("在Java体系中主要分为2大类数据类型,基本数据类型和引用数据类型")])]),t._v(" "),v("h2",{attrs:{id:"基本数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("数据类型")]),t._v(" "),v("th",[t._v("默认值")]),t._v(" "),v("th",[t._v("大小")]),t._v(" "),v("th",[t._v("范围")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("byte（字节型）")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("占用1个字节（8位）")]),t._v(" "),v("td",[t._v("-128~127")])]),t._v(" "),v("tr",[v("td",[t._v("short（短整型）")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("占用2个字节（16位）")]),t._v(" "),v("td",[t._v("-32768~32767")])]),t._v(" "),v("tr",[v("td",[t._v("int（整型）")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("占用4个字节（32位）")]),t._v(" "),v("td",[t._v("-2147483648~2147483647")])]),t._v(" "),v("tr",[v("td",[t._v("long（长整型）")]),t._v(" "),v("td",[t._v("0L")]),t._v(" "),v("td",[t._v("占用8个字节（64位）")]),t._v(" "),v("td",[t._v("-9223372036854775808~9223372036854775807")])]),t._v(" "),v("tr",[v("td",[t._v("float（单精度浮点型）")]),t._v(" "),v("td",[t._v("0.0f")]),t._v(" "),v("td",[t._v("占用4个字节（32位）")]),t._v(" "),v("td",[t._v("-3.4028235E38~3.4028235E38")])]),t._v(" "),v("tr",[v("td",[t._v("double（双精度浮点型）")]),t._v(" "),v("td",[t._v("0.0d")]),t._v(" "),v("td",[t._v("占用8个字节（64位）")]),t._v(" "),v("td",[t._v("-1.7976931348623157E308~1.7976931348623157E308")])]),t._v(" "),v("tr",[v("td",[t._v("char（字符型）")]),t._v(" "),v("td",[t._v("'\\u0000'")]),t._v(" "),v("td",[t._v("占用2个字节（16位）")]),t._v(" "),v("td",[t._v("0~65535")])]),t._v(" "),v("tr",[v("td",[t._v("boolean（布尔型）")]),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("占用1个字节")]),t._v(" "),v("td",[t._v("true或false")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("需要注意的是，byte、short、int、long、float、double和char都是有符号类型，即可以表示负数和0，"),v("br"),t._v("\n而boolean没有符号，只能表示true或false。此外，Java中没有无符号整型类型。\n")]),v("p",[t._v("\n基本数据类型的大小和范围是由JVM规范定义的，不受具体实现的影响。同时，Java中基本数据类型的默认值都为0，除了char的默认值是'\\u0000'\n，boolean的默认值是false。\n")]),v("p",[t._v("\n在Java中，int是一个有符号的32位整数类型，其中最高位（即最左边的一位）用来表示符号位，"),v("mark",[t._v("0表示正数，1表示负数")]),t._v("。\n因此，int类型的取值范围是从-2,147,483,648到2,147,483,647。例如，二进制数0b10000000000000000000000000000000表示的是int类型的最小值-2,147,483,648，\n其中最高位为1，表示负数。而二进制数0b01111111111111111111111111111111表示的是int类型的最大值2,147,483,647，其中最高位为0，表示正数。")])]),t._v(" "),v("p",[t._v("0b表示二进制表示法。在Java 7及以上版本中，可以使用0b或0B前缀来表示二进制数，例如0b101表示十进制数5。在之前的Java版本中，需要使用十六进制表示法来表示二进制数，例如0x5表示十进制数5。")]),t._v(" "),v("h2",{attrs:{id:"引用数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),v("blockquote",[v("p",[t._v("在Java中，引用数据类型是指存储在堆（heap）内存中的数据类型，它们的值是一个引用（reference），指向实际存储数据的内存地址。常见的引用数据类型包括类、接口、数组等。")])]),t._v(" "),v("p",[t._v("与基本数据类型不同，引用数据类型的大小不是固定的，它们所占用的内存空间取决于实际存储的数据大小。当创建一个引用数据类型时，Java会在堆内存中分配一块连续的内存空间，用于存储这个数据类型的实例，同时返回一个引用，指向这个实例在堆内存中的地址。")]),t._v(" "),v("blockquote",[v("p",[t._v("在Java中，引用数据类型是通过使用new运算符来创建的，例如：")])]),t._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),t._v(" obj"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[t._v("这里，MyClass是一个类，obj是一个引用，new MyClass()会在堆内存中分配一块内存空间，用于存储MyClass类的实例，并返回这个实例在堆内存中的地址，赋值给obj引用。")]),t._v(" "),v("h2",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),v("p",[t._v("基本数据类型和引用数据类型两种，它们的区别如下：")]),t._v(" "),v("ul",[v("li",[t._v("定义方式不同：基本数据类型是Java语言内置的数据类型，直接使用关键字来定义，如int、double、char等，而引用数据类型则是由程序员自己定义的类、接口、数组等。")]),t._v(" "),v("li",[t._v("存储方式不同：基本数据类型的变量在内存中直接存储该变量的值，而引用数据类型的变量在内存中存储的是该变量所引用的对象的地址，即指向对象在内存中的地址。")]),t._v(" "),v("li",[t._v("占用内存空间不同：基本数据类型在内存中占用的空间大小是固定的，而引用数据类型在内存中占用的空间大小则取决于所引用的对象的大小。")]),t._v(" "),v("li",[t._v("默认值不同：基本数据类型在声明变量时如果没有赋值，系统会自动给它们赋予默认值，如int型默认值为0，而引用数据类型如果没有初始化，则默认值为null。")]),t._v(" "),v("li",[t._v("传递方式不同：基本数据类型在传递参数时，是将实际参数的值复制一份传递给形式参数，而引用数据类型在传递参数时，是将实际参数的地址复制一份传递给形式参数，即实际参数和形式参数都指向同一个对象。")]),t._v(" "),v("li",[t._v("总的来说，基本数据类型和引用数据类型都是Java中的数据类型，但是它们在定义方式、存储方式、占用内存空间、默认值和传递方式等方面有所区别，程序员在使用Java语言时需要根据实际情况来选择使用哪种数据类型。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);