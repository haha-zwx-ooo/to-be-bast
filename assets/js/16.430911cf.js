(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{291:function(t,a,s){"use strict";s.r(a);var r=s(14),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"什么是方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是方法"}},[t._v("#")]),t._v(" 什么是方法")])]),t._v(" "),a("p",[t._v("在Java中，方法（Method）是一段代码块，用于执行特定的任务或操作。方法可以接受参数，也可以返回值。方法通常用于组织和封装代码，以便在需要时可以重复使用。")]),t._v(" "),a("p",[t._v("Java中的方法由方法名、参数列表、返回类型和方法体组成。方法名用于标识方法，在调用方法时需要使用方法名。参数列表用于指定方法接受的参数类型和参数名。返回类型用于指定方法返回的值类型。方法体是一组语句，用于执行方法的任务或操作。")]),t._v(" "),a("p",[t._v("下面是一个简单的Java方法的示例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("在这个例子中，声明了一个名为add的方法，它接受两个整数参数a和b，返回它们的和。方法的返回类型是int。方法体中的语句将a和b相加，并将结果存储在result变量中。最后，方法使用return语句返回result变量的值。")]),t._v(" "),a("p",[t._v("在Java中，方法可以在类中声明，也可以在接口中声明。方法的访问修饰符可以是public、protected、private或不写，用于控制方法的访问权限。在类中声明的方法可以是静态的或非静态的，具体取决于方法是否依赖于类的实例。在接口中声明的方法默认是公共的和抽象的，不包含方法体。")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"方法的核心组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法的核心组成"}},[t._v("#")]),t._v(" 方法的核心组成")])]),t._v(" "),a("ul",[a("li",[t._v("访问修饰符")]),t._v(" "),a("li",[t._v("是否是抽象方法(abstract|不写)")]),t._v(" "),a("li",[t._v("是否是静态方法(static|不写)")]),t._v(" "),a("li",[t._v("是否有返回值(void|有返回值)")]),t._v(" "),a("li",[t._v("方法名")]),t._v(" "),a("li",[t._v("方法参数")]),t._v(" "),a("li",[t._v("方法体")])]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"如何使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用方法"}},[t._v("#")]),t._v(" 如何使用方法")])]),t._v(" "),a("p",[t._v("在Java中，使用方法通常需要以下步骤：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("定义方法：使用方法的前提是首先要定义方法。方法的定义包括方法名、参数列表、返回类型和方法体。")])]),t._v(" "),a("li",[a("p",[t._v("创建对象：如果方法不是静态方法，就需要创建类的对象。创建对象可以使用new关键字来调用类的构造方法。")])]),t._v(" "),a("li",[a("p",[t._v("调用方法：使用对象或类名加上方法名和参数列表的方式来调用方法。如果是实例方法，则使用对象来调用方法；如果是静态方法，则使用类名来调用方法。")])]),t._v(" "),a("li",[a("p",[t._v("获取返回值：如果方法返回一个值，可以使用一个变量来存储这个值。")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);